?sample
x <- seq(-10,30)
y <- 3 - 2*x +
arima.sim(n = length(x),
list(ar = c(0.8897)),
sd = 3)
plot(x,y)
abline(lm(y ~ x))
plot(residuals(lm(y ~ x)), type ="b")
abline(h=0,col="red")
knitr::include_graphics("durbin_cutoffs.png")
suppressMessages(library(lmtest))
dwtest(lm(y ~ x), alternative = "greater") # need library(lmtest)
# don't change order=
# because we haven't
# discussed any other
# time series models
corrErrorMod <-
arima(x=y, #dependent variable has a confusing name
xreg=x, #independent variable
include.mean = T,
method="ML",
order=c(1,0,0))
plot(residuals(corrErrorMod)) #these look better
summary(corrErrorMod)
corrErrorMod$coef # phi, beta0, beta1
summary(lm(y ~ x)) # estimates are pretty close to simple ols model
knitr::include_graphics("sample_with_replacement.png")
n <- 100
true_beta0 <- -2
true_beta1 <- 3
true_sigma_squared <- 5
x <- seq(0,100, length.out = n)
y <- true_beta0 + true_beta1*x + rnorm(n = n, mean = 0, sd = sqrt(true_sigma_squared))
bootstrap_once <- function(){
}
random_indexes <- sample.int(length(x), replace=TRUE) # need replace=T
sort(random_indexes) # just to show that some are repeating
xstar <- x[random_indexes]
ystar <- y[random_indexes]
lm(ystar ~ xstar)
coefficients(lm(ystar ~ xstar))
class(coefficients(lm(ystar ~ xstar)))
typeof(coefficients(lm(ystar ~ xstar)))
x <- seq(-10,30)
y <- 3 - 2*x +
arima.sim(n = length(x),
list(ar = c(0.8897)),
sd = 3)
plot(x,y)
abline(lm(y ~ x))
plot(residuals(lm(y ~ x)), type ="b")
abline(h=0,col="red")
knitr::include_graphics("durbin_cutoffs.png")
suppressMessages(library(lmtest))
dwtest(lm(y ~ x), alternative = "greater") # need library(lmtest)
# don't change order=
# because we haven't
# discussed any other
# time series models
corrErrorMod <-
arima(x=y, #dependent variable has a confusing name
xreg=x, #independent variable
include.mean = T,
method="ML",
order=c(1,0,0))
plot(residuals(corrErrorMod)) #these look better
summary(corrErrorMod)
corrErrorMod$coef # phi, beta0, beta1
summary(lm(y ~ x)) # estimates are pretty close to simple ols model
knitr::include_graphics("sample_with_replacement.png")
n <- 50
true_beta0 <- -2
true_beta1 <- 3
true_sigma_squared <- 5
x <- seq(0,100, length.out = n)
y <- true_beta0 + true_beta1*x + rnorm(n = n, mean = 0, sd = sqrt(true_sigma_squared))
random_indexes <- sample.int(length(x), replace=TRUE) # need replace=T
sort(random_indexes) # just to show that some are repeating
xstar <- x[random_indexes]
ystar <- y[random_indexes]
coefficients(lm(ystar ~ xstar))
bootstrap_once <- function(){
random_indexes <- sample.int(length(x), replace=TRUE) # need replace=T
xstar <- x[random_indexes]
ystar <- y[random_indexes]
return(coefficients(lm(ystar ~ xstar))[1])
}
m <- 1e3
beta0Stars <- replicate(m, bootstrap_once())
hist(beta0Stars)
abline(v=true_beta0, col = "red")
abline(v=)
quantile(beta0Stars, .1)
quantile(beta0Stars, .9)
confint(lm(y ~ x)) # non bootstrapped intervals
library(quantmod)
install.packages("quantmod")
library(quantmod)
?getSymbols
getSymbols("SPY")
head(SPY)
price <- Ad(SPY)
plot.ts(price)
SPY$ret <- dailyReturn(SPY)
head(SPY)
(109.7357 - 109.5034)/109.5034
?dailyReturn
(109.7357-109.5034)/109.5034
SPY$ret <- dailyReturn(SPY)*100
SPY$max <- cummax(Ad(SPY))
head(SPY)
SPY$offHighs <- log(Ad(SPY)/SPY$max)
SPY$max <- cummax(Ad(SPY))
head(SPY)
SPY$lagOffHighs <- lag(SPY$offHighs)
head(SPY)
plot(SPY$lagOffHighs, SPY$ret)
SPY$lagOffHighs
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mean(SPY$ret)
mean(SPY$ret[SPY$lagOffHighs > -.4])
mean(SPY$ret[SPY$lagOffHighs <= -.4])
nrow(SPY)
plot(SPY$lagOffHighs)
nrow(SPY)
nrow(SPY)/2
floor(nrow(SPY)/2)
SPY[-(1:floor(nrow(SPY)/2)),]
SPY <- SPY[-(1:floor(nrow(SPY)/2)),]
head(SPY)
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
abline(lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs)))
abline(h=0, col ="red")
library(quantmod)
getSymbols("SPY")
SPY$ret <- weeklyReturn(SPY)*100
SPY$max <- cummax(Ad(SPY))
head(SPY)
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs))
abline(mod)
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs))
library(quantmod)
getSymbols("SPY")
SPY$ret <- dailyReturn(SPY)*100
SPY$max <- cummax(Ad(SPY))
SPY$offHighs <- log(Ad(SPY)/SPY$max)
SPY$lagOffHighs <- lag(SPY$offHighs)
SPY <- SPY[-(1:floor(nrow(SPY)/2)),]
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs))
abline(mod)
abline(h=0, col ="red")
plot(residuals(mod))
fitted(mod)
fitted(mod) < 0
sum(fitted(mod) < 0)
fitted(mod) < 0
plot(fitted(mod) < 0)
models <- seq( from=0 , to=1 , length.out=100 )
prior <- rep( 1 , 100 )
likelihood <- dbinom( 6 , size=9 , prob=models )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
# using formula interface
plot( posterior ~ models , type="l" )
shade( posterior ~ models , c(0,0.5) )
install.packages("rethinking")
?polygon
x <- c(1:9, 8:1)
y <- c(1, 2*(5:3), 2, -1, 17, 9, 8, 2:9)
op <- par(mfcol = c(3, 1))
for(xpd in c(FALSE, TRUE, NA)) {
plot(1:10, main = paste("xpd =", xpd))
box("figure", col = "pink", lwd = 3)
polygon(x, y, xpd = xpd, col = "orange", lty = 2, lwd = 2, border = "red")
}
x <- c(1:9, 8:1)
y <- c(1, 2*(5:3), 2, -1, 17, 9, 8, 2:9)
for(xpd in c(FALSE, TRUE, NA)) {
plot(1:10, main = paste("xpd =", xpd))
box("figure", col = "pink", lwd = 3)
polygon(x, y, xpd = xpd, col = "orange", lty = 2, lwd = 2, border = "red")
}
polygon(x, y, xpd = xpd, col = "orange", lty = 2, lwd = 2, border = "red")
plot(1:10, main = paste("xpd =", xpd))
n <- 100
xx <- c(0:n, n:0)
yy <- c(c(0, cumsum(stats::rnorm(n))), rev(c(0, cumsum(stats::rnorm(n)))))
plot   (xx, yy, type = "n", xlab = "Time", ylab = "Distance")
par()
par(mar)
par(mar())
par("mar")
par(mar=c(1,1,1,1))
n <- 100
xx <- c(0:n, n:0)
yy <- c(c(0, cumsum(stats::rnorm(n))), rev(c(0, cumsum(stats::rnorm(n)))))
plot(xx, yy, type = "n", xlab = "Time", ylab = "Distance")
polygon(xx, yy, col = "gray", border = "red")
plot(xx, yy, type = "n", xlab = "Time", ylab = "Distance")
par(mfrow=c(1,1))
yy <- c(c(0, cumsum(stats::rnorm(n))), rev(c(0, cumsum(stats::rnorm(n)))))
plot(xx, yy, type = "n", xlab = "Time", ylab = "Distance")
plot(xx, yy, xlab = "Time", ylab = "Distance")
polygon(xx, yy, col = "gray", border = "red")
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs))
abline(mod)
par("mar")
dev.off()
par("mar")
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs))
abline(mod)
abline(h=0, col ="red")
fitted(mod) < 0
which(fitted(mod) < 0)
polygon(which(fitted(mod) < 0), rep(3, length(which(fitted(mod) < 0))), col = "gray", border = "red")
rep((1:2),2)
polygon(rep(which(fitted(mod) < 0),2),
c(rep(3, length(which(fitted(mod) < 0))),rep(-, length(which(fitted(mod) < 0)))),
col = "gray", border = "red")
rep(which(fitted(mod) < 0),2)
c(rep(3, length(which(fitted(mod) < 0))),rep(-, length(which(fitted(mod) < 0))))
c(rep(3, length(which(fitted(mod) < 0))),rep(-, length(which(fitted(mod) < 0)))))
c(rep(3, length(which(fitted(mod) < 0))),rep(-, length(which(fitted(mod) < 0)))
rep(3, length(which(fitted(mod) < 0))
)
rep(3, length(which(fitted(mod) < 0)))
c(rep(3, length(which(fitted(mod) < 0))), rep(-3, length(which(fitted(mod) < 0))) )
polygon(rep(which(fitted(mod) < 0),2),
c(rep(3, length(which(fitted(mod) < 0))), rep(-3, length(which(fitted(mod) < 0))) ),
col = "gray", border = "red")
polygon(coredata(SPY$lagOffHighs)[rep(which(fitted(mod) < 0),2)],
c(rep(3, length(which(fitted(mod) < 0))), rep(-3, length(which(fitted(mod) < 0))) ),
col = "gray", border = "red")
plot(residuals(mod))
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs))
abline(mod)
abline(h=0, col ="red")
polygon(coredata(SPY$lagOffHighs)[rep(which(fitted(mod) < 0),2)],
c(rep(3, length(which(fitted(mod) < 0))), rep(-3, length(which(fitted(mod) < 0))) ),
col = "gray", border = "red")
summary(mod)
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs) + 0)
abline(mod)
abline(h=0, col ="red")
polygon(coredata(SPY$lagOffHighs)[rep(which(fitted(mod) < 0),2)],
c(rep(3, length(which(fitted(mod) < 0))), rep(-3, length(which(fitted(mod) < 0))) ),
col = "gray", border = "red")
plot(residuals(mod))
plot(fitted(mod) < 0)
summary(mod)
library(quantmod)
getSymbols("SPY")
SPY$ret <- dailyReturn(SPY)*100
SPY$max <- cummax(Ad(SPY))
SPY$offHighs <- log(Ad(SPY)/SPY$max)
SPY$lagOffHighs <- lag(SPY$offHighs)
SPY <- SPY[-(1:floor(nrow(SPY)/2)),]
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs) + 0)
abline(mod)
abline(h=0, col ="red")
polygon(coredata(SPY$lagOffHighs)[rep(which(fitted(mod) < 0),2)],
c(rep(3, length(which(fitted(mod) < 0))), rep(-3, length(which(fitted(mod) < 0))) ),
col = "gray", border = "red")
summary(mod)
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret)^2)
SPY$ret <- dailyReturn(SPY)*100
SPY$max <- cummax(Ad(SPY))
SPY$offHighs <- log(Ad(SPY)/SPY$max)
SPY$lagOffHighs <- lag(SPY$offHighs)
SPY <- SPY[-(1:floor(nrow(SPY)/2)),]
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
mod <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs) + 0)
abline(mod)
abline(h=0, col ="red")
polygon(coredata(SPY$lagOffHighs)[rep(which(fitted(mod) < 0),2)],
c(rep(3, length(which(fitted(mod) < 0))), rep(-3, length(which(fitted(mod) < 0))) ),
col = "gray", border = "red")
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret)^2)
plot(residuals(mod))
plot(coredata(SPY$lagOffHighs),residuals(mod))
plot(residuals(mod))
plot(coredata(SPY$ret))
plot(residuals(mod))
plot(coredata(SPY$ret))
plot(residuals(mod))
plot(coredata(SPY$ret))
plot(residuals(mod))
plot(coredata(SPY$ret))
mod2 <- lm(coredata(SPY$ret) ~ coredata(SPY$lagOffHighs) + I(coredata(SPY$lagOffHighs)^2) )
summary(mod2)
mod2 <- lm(coredata(SPY$ret) ~  I(coredata(SPY$lagOffHighs)^2) )
summary(mod2)
plot(residuals(mod2))
plot(coredata(SPY$lagOffHighs), coredata(SPY$ret))
abline(mod)
abline(mod2)
plot(coredata(SPY$lagOffHighs)^2, coredata(SPY$ret))
abline(mod2)
plot(residuals(mod2))
